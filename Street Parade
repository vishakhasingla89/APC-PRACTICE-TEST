#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>
#include <limits.h>
#include <stdbool.h>
typedef struct stack{
    int data;
    struct stack *next;
}stack;
void push(stack **head,int data)
{
    stack *nn=(stack*)malloc(sizeof(stack));
    nn->data=data;
    nn->next=*head;
    *head=nn;
}
void pop(stack **head)
{
    stack *temp=*head;
    *head=temp->next;
    temp=NULL;
    free(temp);
}
int top(stack *head)
{
    return (head->data);
}
int isEmpty(stack *head)
{
    if(head==NULL)
    return 1;
    else
    return 0;
}
int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */
    int n,i,j;
    scanf("%d",&n);
    while(n)
    {
        int arr[n],res[n],k=0;
        for(i=0;i<n;i++)
        scanf("%d",&arr[i]);
        stack *st=NULL;
        for(i=0;i<n;i++)
        {
            if(isEmpty(st))
            push(&st,arr[i]);
            else if(top(st)>arr[i])
            push(&st,arr[i]);
            else{
                while((!isEmpty(st)) && (top(st)<arr[i]))
                {
                    int temp=top(st);
                    pop(&st);
                    res[k++]=temp;

                }
                push(&st,arr[i]);
            }
        }
        while(isEmpty(st)!=1)
        {
            int temp=top(st);
            pop(&st);
            res[k++]=temp;
        }
        for(i=0;i<n;i++)
        {
            if(res[i]!=(i+1))
            break;
        }
        if(i==n)
        printf("yes\n");
        else
        printf("no\n");
        scanf("%d",&n);
    }
    return 0;
}
